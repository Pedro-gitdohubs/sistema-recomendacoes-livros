Sistema de Votação de Ideias
Criação de uma MVC onde os usuários podem sugerir ideias, votar em suas ideias
favoritas e comentar em cada ideia. Tabelas: Usuários, Ideias, Votos.
Plataforma de Doações de Alimentos
Um sistema para conectar doadores de alimentos a organizações de caridade. Doadores
podem registrar doações, e as instituições podem solicitar retiradas. Tabelas: Doadores,
Doações, Instituições.
Aplicativo de Feedback para Produtos
Um sistema onde os usuários podem enviar feedback para produtos específicos, incluindo
uma nota e comentários. Tabelas: Produtos, Usuários, Feedback.
Sistema de Agendamento de Workshops Uma MVC para gerenciar workshops e permitir
que usuários se inscrevam em sessões específicas. Tabelas: Workshops, Usuários,
Inscrições.
Sistema de Intercâmbio de Livros
Criação de uma plataforma onde os usuários podem listar livros para troca e marcar trocas
com outros usuários. Tabelas: Usuários, Livros, Trocas.
Plataforma de Sugestão de Filmes
Sistema para sugerir filmes baseado em categorias escolhidas pelos usuários. Eles podem
avaliar as sugestões com notas. Tabelas: Filmes, Categorias, Avaliações.
Aplicativo de Desafios Fitness
Um sistema onde os usuários podem criar desafios de exercícios, participar de desafios
existentes e registrar seus progressos. Tabelas: Desafios, Usuários, Progresso.
Sistema de Recomendações de Livros por Gênero
MVC onde os usuários podem registrar seus gêneros de leitura favoritos e receber
sugestões baseadas em recomendações. Tabelas: Usuários, Gêneros, Recomendações.
Sistema de Registro de Plantas Domésticas
Uma MVC onde os usuários podem registrar as plantas que possuem, o tipo de cuidado que
elas requerem e marcar lembretes para os cuidados. Tabelas: Plantas, Usuários, Cuidados.
Aplicativo de Troca de Conhecimentos
Um sistema onde os usuários podem oferecer e buscar conhecimentos (ex.: culinária,
programação). Cada usuário pode oferecer uma habilidade e registrar o interesse em
aprender outra. Tabelas: Usuários, Habilidades, Trocas.
Sistema de Matriculas para Escola
Sistema de ToDo List
Sistema gerador de Provas

--- PAGE 1 ---

Sistema de Votação de Ideias
sql
Copiar código
CREATE TABLE usuarios (
id INT AUTO_INCREMENT PRIMARY KEY,
nome VARCHAR(100) NOT NULL,
email VARCHAR(100) UNIQUE NOT NULL,
senha VARCHAR(255) NOT NULL
);
CREATE TABLE ideias (
id INT AUTO_INCREMENT PRIMARY KEY,
titulo VARCHAR(150) NOT NULL,
descricao TEXT NOT NULL,
usuario_id INT,
FOREIGN KEY (usuario_id) REFERENCES usuarios(id)
);
CREATE TABLE votos (
id INT AUTO_INCREMENT PRIMARY KEY,
usuario_id INT,
ideia_id INT,
FOREIGN KEY (usuario_id) REFERENCES usuarios(id),
FOREIGN KEY (ideia_id) REFERENCES ideias(id)
);
2. Plataforma de Doações de Alimentos
sql
Copiar código
CREATE TABLE doadores (
id INT AUTO_INCREMENT PRIMARY KEY,
nome VARCHAR(100) NOT NULL,
email VARCHAR(100) UNIQUE NOT NULL
);
CREATE TABLE instituicoes (
id INT AUTO_INCREMENT PRIMARY KEY,
nome VARCHAR(150) NOT NULL,
endereco VARCHAR(255) NOT NULL
);
CREATE TABLE doacoes (
id INT AUTO_INCREMENT PRIMARY KEY,
doador_id INT,

--- PAGE 2 ---

instituicao_id INT,
descricao TEXT NOT NULL,
data_doacao DATE NOT NULL,
FOREIGN KEY (doador_id) REFERENCES doadores(id),
FOREIGN KEY (instituicao_id) REFERENCES instituicoes(id)
);
3. Aplicativo de Feedback para Produtos
sql
Copiar código
CREATE TABLE produtos (
id INT AUTO_INCREMENT PRIMARY KEY,
nome VARCHAR(100) NOT NULL,
descricao TEXT NOT NULL,
preco DECIMAL(10, 2) NOT NULL
);
CREATE TABLE usuarios (
id INT AUTO_INCREMENT PRIMARY KEY,
nome VARCHAR(100) NOT NULL,
email VARCHAR(100) UNIQUE NOT NULL
);
CREATE TABLE feedback (
id INT AUTO_INCREMENT PRIMARY KEY,
usuario_id INT,
produto_id INT,
nota INT NOT NULL,
comentario TEXT,
FOREIGN KEY (usuario_id) REFERENCES usuarios(id),
FOREIGN KEY (produto_id) REFERENCES produtos(id)
);
4. Sistema de Agendamento de Workshops
sql
Copiar código
CREATE TABLE workshops (
id INT AUTO_INCREMENT PRIMARY KEY,
titulo VARCHAR(150) NOT NULL,
descricao TEXT,
data DATE NOT NULL
);
CREATE TABLE usuarios (

--- PAGE 3 ---

id INT AUTO_INCREMENT PRIMARY KEY,
nome VARCHAR(100) NOT NULL,
email VARCHAR(100) UNIQUE NOT NULL
);
CREATE TABLE inscricoes (
id INT AUTO_INCREMENT PRIMARY KEY,
usuario_id INT,
workshop_id INT,
FOREIGN KEY (usuario_id) REFERENCES usuarios(id),
FOREIGN KEY (workshop_id) REFERENCES workshops(id)
);
5. Sistema de Intercâmbio de Livros
sql
Copiar código
CREATE TABLE usuarios (
id INT AUTO_INCREMENT PRIMARY KEY,
nome VARCHAR(100) NOT NULL,
email VARCHAR(100) UNIQUE NOT NULL
);
CREATE TABLE livros (
id INT AUTO_INCREMENT PRIMARY KEY,
titulo VARCHAR(150) NOT NULL,
autor VARCHAR(100) NOT NULL,
usuario_id INT,
FOREIGN KEY (usuario_id) REFERENCES usuarios(id)
);
CREATE TABLE trocas (
id INT AUTO_INCREMENT PRIMARY KEY,
livro_oferecido_id INT,
livro_recebido_id INT,
FOREIGN KEY (livro_oferecido_id) REFERENCES livros(id),
FOREIGN KEY (livro_recebido_id) REFERENCES livros(id)
);
6. Plataforma de Sugestão de Filmes
sql
Copiar código
CREATE TABLE filmes (
id INT AUTO_INCREMENT PRIMARY KEY,
titulo VARCHAR(150) NOT NULL,

--- PAGE 4 ---

ano_lancamento INT NOT NULL
);
CREATE TABLE categorias (
id INT AUTO_INCREMENT PRIMARY KEY,
nome VARCHAR(100) NOT NULL
);
CREATE TABLE avaliacoes (
id INT AUTO_INCREMENT PRIMARY KEY,
filme_id INT,
categoria_id INT,
nota INT NOT NULL,
FOREIGN KEY (filme_id) REFERENCES filmes(id),
FOREIGN KEY (categoria_id) REFERENCES categorias(id)
);
7. Aplicativo de Desafios Fitness
sql
Copiar código
CREATE TABLE desafios (
id INT AUTO_INCREMENT PRIMARY KEY,
nome VARCHAR(150) NOT NULL,
descricao TEXT
);
CREATE TABLE usuarios (
id INT AUTO_INCREMENT PRIMARY KEY,
nome VARCHAR(100) NOT NULL,
email VARCHAR(100) UNIQUE NOT NULL
);
CREATE TABLE progresso (
id INT AUTO_INCREMENT PRIMARY KEY,
usuario_id INT,
desafio_id INT,
progresso INT NOT NULL, -- Percentual de progresso no desafio (0 a 100)
FOREIGN KEY (usuario_id) REFERENCES usuarios(id),
FOREIGN KEY (desafio_id) REFERENCES desafios(id)
);
8. Sistema de Recomendações de Livros por Gênero
sql
Copiar código

--- PAGE 5 ---

CREATE TABLE usuarios (
id INT AUTO_INCREMENT PRIMARY KEY,
nome VARCHAR(100) NOT NULL,
email VARCHAR(100) UNIQUE NOT NULL
);
CREATE TABLE generos (
id INT AUTO_INCREMENT PRIMARY KEY,
nome VARCHAR(100) NOT NULL
);
CREATE TABLE recomendacoes (
id INT AUTO_INCREMENT PRIMARY KEY,
usuario_id INT,
genero_id INT,
livro_recomendado VARCHAR(150),
FOREIGN KEY (usuario_id) REFERENCES usuarios(id),
FOREIGN KEY (genero_id) REFERENCES generos(id)
);
9. Sistema de Registro de Plantas Domésticas
sql
Copiar código
CREATE TABLE plantas (
id INT AUTO_INCREMENT PRIMARY KEY,
nome_cientifico VARCHAR(150) NOT NULL,
nome_popular VARCHAR(100)
);
CREATE TABLE usuarios (
id INT AUTO_INCREMENT PRIMARY KEY,
nome VARCHAR(100) NOT NULL,
email VARCHAR(100) UNIQUE NOT NULL
);
CREATE TABLE cuidados (
id INT AUTO_INCREMENT PRIMARY KEY,
usuario_id INT,
planta_id INT,
tipo_cuidado VARCHAR(100) NOT NULL, -- Ex: rega, adubação
frequencia INT NOT NULL, -- Em dias
FOREIGN KEY (usuario_id) REFERENCES usuarios(id),
FOREIGN KEY (planta_id) REFERENCES plantas(id)
);

--- PAGE 6 ---

10. Aplicativo de Troca de Conhecimentos
sql
Copiar código
CREATE TABLE usuarios (
id INT AUTO_INCREMENT PRIMARY KEY,
nome VARCHAR(100) NOT NULL,
email VARCHAR(100) UNIQUE NOT NULL
);
CREATE TABLE habilidades (
id INT AUTO_INCREMENT PRIMARY KEY,
nome VARCHAR(100) NOT NULL
);
CREATE TABLE trocas (
id INT AUTO_INCREMENT PRIMARY KEY,
usuario_oferecendo_id INT,
usuario_interessado_id INT,
habilidade_id INT,
FOREIGN KEY (usuario_oferecendo_id) REFERENCES usuarios(id),
FOREIGN KEY (usuario_interessado_id) REFERENCES usuarios(id),
FOREIGN KEY (habilidade_id) REFERENCES habilidades(id)
);

--- PAGE 7 ---

